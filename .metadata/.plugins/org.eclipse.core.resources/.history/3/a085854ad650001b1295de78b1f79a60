package com.ordereat.OrderEat.Controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.ordereat.OrderEat.Entity.ResponseEntityClass;
import com.ordereat.OrderEat.Entity.RestaurantDetails;
import com.ordereat.OrderEat.Entity.RestaurantOwner;
import com.ordereat.OrderEat.Repository.RestaurantOwnerRepository;

@RestController
@RequestMapping("/roe/restaurant")
public class RestaurantOwnerDetailsController {

	@Autowired
	RestaurantOwnerRepository restaurantOwnerRepository;
	
	enum STATUS{
		SUCCESS("success"), FAILURE("failure");
		
		public final String status;
		
		private STATUS(String status) {
			this.status = status;
		}
	}
	
	@GetMapping("/getrestaurantusers")
	public ResponseEntity<List<RestaurantOwner>> getRestaurantOwnersList(){
		
		List<Object> restaurantOwnersList = new ArrayList<Object>(restaurantOwnerRepository.findAll());
		ResponseEntityClass response = new ResponseEntityClass(STATUS.SUCCESS.toString(), restaurantOwnersList, "", HttpStatus.OK.value());
		return new ResponseEntity<>(new ResponseEntityClass(STATUS.SUCCESS, restaurantOwnersList, "", HttpStatus.OK));
	}
	
	@GetMapping("/getrestaurantuser/{id}")
	public ResponseEntity<RestaurantOwner> getRestaurantOwner(@PathVariable("id") Long id) {
		RestaurantOwner owner = restaurantOwnerRepository.findRestaurantOwnerById(id);
		if(owner == null) {
			return ResponseEntity.notFound().build();
		}else {
			return ResponseEntity.ok()
		}
	}
	
	@GetMapping("/getRestaurants")
	public ResponseEntity<List<RestaurantDetails>> getRestaurantList(){
		return (ResponseEntity<List<RestaurantDetails>>) restaurantOwnerRepository.findAll();
	}
	
	@GetMapping("/getRestaurant/{id}")
	public Optional<RestaurantOwner> getRestaurant(@PathVariable("id") Long id) {
		return restaurantOwnerRepository.findById(id);
	}
	
	@PutMapping("/updaterestaurantuser")
	public updateRestaurantOwner(@RequestBody RestaurantOwner restaurantOwner) {
		Long id = restaurantOwner.getId();
		if(restaurantOwnerRepository.findById(id)) {
			restaurantOwnerRepository.save(entity);
		}
	}
}
